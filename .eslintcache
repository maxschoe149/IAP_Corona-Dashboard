[{"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/index.js":"1","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/reportWebVitals.js":"2","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/App.js":"3","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/tasks/LoadEuropeTask.js":"4","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/tasks/BuildLegendsTask.js":"5","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/tasks/LoadCountriesTask.js":"6","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/InfoPanel.jsx":"7","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/LoadingMap.jsx":"8","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/TopRow.jsx":"9","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/CovidMap_Class.jsx":"10","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/MapSelectionButtons.jsx":"11","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartsWrapper.jsx":"12","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/EuropeCovidMap.jsx":"13","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/Vacc.jsx":"14","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/InfoWindow.jsx":"15","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/tasks/BuildLegend.js":"16","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartMenu/ChartMenu_Vacc.jsx":"17","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/tasks/formatNumberWithSpaces.js":"18","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/Legend.jsx":"19","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/NewstickerLanguage.jsx":"20","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/Newsticker.jsx":"21","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/UpdatePanel.jsx":"22","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/DropdownMenuButton.jsx":"23","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/MapFocusButton.jsx":"24","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/Tooltipbox.jsx":"25","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/Charts.jsx":"26","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/Charts_Region.jsx":"27","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartMenu/TimeRange.jsx":"28","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartMenu/Stepsize.jsx":"29","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/entities/LegendItem.js":"30","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartMenu.jsx":"31","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/tasks/LoadNewsTask.js":"32","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/entities/DropdownMenu.jsx":"33","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/entities/FocusMenu.jsx":"34","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartMenu/AddCountry.jsx":"35","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartMenu/AddRegion.jsx":"36","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/entities/NewsItem.js":"37","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/Vacc_T.jsx":"38","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartMenu/Switches.jsx":"39"},{"size":1066,"mtime":1617627062000,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":1617627062000,"results":"42","hashOfConfig":"41"},{"size":7956,"mtime":1623623409082,"results":"43","hashOfConfig":"41"},{"size":9448,"mtime":1623540454968,"results":"44","hashOfConfig":"41"},{"size":344,"mtime":1617627062000,"results":"45","hashOfConfig":"41"},{"size":6036,"mtime":1623521141346,"results":"46","hashOfConfig":"41"},{"size":930,"mtime":1622703322000,"results":"47","hashOfConfig":"41"},{"size":455,"mtime":1617627062000,"results":"48","hashOfConfig":"41"},{"size":819,"mtime":1622703322000,"results":"49","hashOfConfig":"41"},{"size":7971,"mtime":1623508814184,"results":"50","hashOfConfig":"41"},{"size":1972,"mtime":1623525506353,"results":"51","hashOfConfig":"41"},{"size":4015,"mtime":1623631525265,"results":"52","hashOfConfig":"41"},{"size":8865,"mtime":1623544187912,"results":"53","hashOfConfig":"41"},{"size":11384,"mtime":1623623079374,"results":"54","hashOfConfig":"41"},{"size":16944,"mtime":1623618176362,"results":"55","hashOfConfig":"41"},{"size":4213,"mtime":1623521060769,"results":"56","hashOfConfig":"41"},{"size":1991,"mtime":1623605787744,"results":"57","hashOfConfig":"41"},{"size":275,"mtime":1623525193620,"results":"58","hashOfConfig":"41"},{"size":1057,"mtime":1622703322000,"results":"59","hashOfConfig":"41"},{"size":1275,"mtime":1617627062000,"results":"60","hashOfConfig":"41"},{"size":2785,"mtime":1623525539704,"results":"61","hashOfConfig":"41"},{"size":578,"mtime":1617627062000,"results":"62","hashOfConfig":"41"},{"size":864,"mtime":1617627062000,"results":"63","hashOfConfig":"41"},{"size":1693,"mtime":1622703322000,"results":"64","hashOfConfig":"41"},{"size":3697,"mtime":1623525628125,"results":"65","hashOfConfig":"41"},{"size":19409,"mtime":1623634402047,"results":"66","hashOfConfig":"41"},{"size":22155,"mtime":1623636588899,"results":"67","hashOfConfig":"41"},{"size":1202,"mtime":1623631810226,"results":"68","hashOfConfig":"41"},{"size":829,"mtime":1623632120140,"results":"69","hashOfConfig":"41"},{"size":275,"mtime":1617627062000,"results":"70","hashOfConfig":"41"},{"size":3730,"mtime":1623632189633,"results":"71","hashOfConfig":"41"},{"size":1951,"mtime":1623525165665,"results":"72","hashOfConfig":"41"},{"size":1502,"mtime":1622703322000,"results":"73","hashOfConfig":"41"},{"size":1502,"mtime":1623630866506,"results":"74","hashOfConfig":"41"},{"size":2039,"mtime":1623061078000,"results":"75","hashOfConfig":"41"},{"size":3060,"mtime":1623516300236,"results":"76","hashOfConfig":"41"},{"size":196,"mtime":1617627062000,"results":"77","hashOfConfig":"41"},{"size":10448,"mtime":1623629979687,"results":"78","hashOfConfig":"41"},{"size":3989,"mtime":1623631404490,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a3zox",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/index.js",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/reportWebVitals.js",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/App.js",["159"],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/tasks/LoadEuropeTask.js",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/tasks/BuildLegendsTask.js",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/tasks/LoadCountriesTask.js",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/InfoPanel.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/LoadingMap.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/TopRow.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/CovidMap_Class.jsx",["160","161","162"],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/MapSelectionButtons.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartsWrapper.jsx",["163","164","165"],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/EuropeCovidMap.jsx",["166","167","168"],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/Vacc.jsx",["169","170","171","172","173","174","175","176","177","178","179"],"import React,  { useState,useEffect } from 'react';\nimport \"./Charts.css\"\nimport Chart, { plugins } from 'chart.js'\nimport ChartMenu_Vacc from \"./ChartMenu/ChartMenu_Vacc.jsx\"\nimport LoadingMap from \"./LoadingMap\";\n\n// Global Var\nvar German_population = 83200000;\n\n// chart.js options\nvar chart_color = Chart.helpers.color;\nvar config = {\n    type:\"line\",\n    data: {\n        labels: [],\n        datasets: []\n    },\n    options: {\n        legend: {\n          position: 'top',\n          labels: {\n            fontColor: 'white'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Chart',\n          fontColor: 'white',\n          fontSize: 18\n        },\n        scales: {\n            xAxes: [{\n                ticks: {\n                    fontColor: 'white'\n                },\n                gridLines: {\n                    color: 'rgb(30, 30, 30)',\n                    display: true,\n                    drawBorder: true,\n                    drawOnChartArea: true,\n                    drawTicks: false,\n                }\n            }],\n            yAxes: [{\n                ticks: {\n                    fontColor: 'white',\n                    beginAtZero:true\n                },\n                gridLines: {\n                    color: 'rgb(30, 30, 30)',\n                    display: true,\n                    drawBorder: true,\n                    drawOnChartArea: true,\n                    drawTicks: false,\n                },\n                scaleLabel: {\n                    display: false,\n                    labelString: 'percent [%]',\n                  }\n            }]\n        }\n    },\n    plugins:[\n        {afterDraw:function(chart) {\n            // var goin = false\n            if(!chart.data.labels || chart.data.labels.length === 0)    {              //goin = true\n            //else if(chart.data.datasets[0].data.length === 0)   //goin = true\n            //if (goin) {\n                //if(chart.data.datasets[0].data.length === 0){\n                 // oder chart.data.datasets.length === 0\n                // No data is present\n                var ctx = chart.chart.ctx;\n                var width = chart.chart.width;\n                var height = chart.chart.height;\n                chart.clear();\n    \n                ctx.save();\n                ctx.textAlign = 'center';\n                ctx.textBaseline = 'middle';\n                ctx.font = \"2rem 'Helvetica Nueue'\";\n                ctx.fillStyle = \"white\";\n                ctx.fillText('Please Select a Region', width / 2, height / 2);\n                ctx.restore();\n                }\n            }\n        }\n    ]\n};\n\n// chart size\nconst styles = {\n    width: '85%',\n    height: \"500px\",\n    overflow: \"hidden\"\n}\n// chart options size\nconst styles2 = {\n    width: '15%'\n}\n\n// States\nconst id = {id:\"ChartID_1\"}\nvar chart;\n\nfunction getRelevantData(CountryData, activeLegend, startDate, endDate, step, lastUpdated,relative){\n\n    // ignore countries with no data\n    if(CountryData === undefined) {\n        if(chart.data.labels){\n            return [[],chart.data.labels]\n        } else {\n            return [[],[]]\n        }\n    }\n    \n    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n    const diffDaysStart = Math.round(Math.abs((startDate - lastUpdated) / oneDay));\n    const NumberDays = Math.round(Math.abs((startDate - endDate) / oneDay));\n    var left_index = CountryData.length - 1 - diffDaysStart\n    var right_index = CountryData.length - diffDaysStart + NumberDays\n    var relevantData = CountryData.slice(left_index,right_index)\n\n    function roundTo2(num) {\n        return +(Math.round(num + \"e+2\")  + \"e-2\");\n    }\n    function roundTo4(num) {\n        return +(Math.round(num + \"e+4\")  + \"e-4\");\n    }\n    function data_sorting(f){\n        var labels = []\n        var data = []\n        var sum_array = []\n\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n                            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n                            ];\n\n        const sum = (accumulator, currentValue) => Number(accumulator) + Number(currentValue);\n\n        for (var i=0; i<relevantData.length; i++){\n            var elem = relevantData[i]\n            var date = new Date(elem.date)\n            if(step.label === \"Day\"){\n                data.push(roundTo2(f(elem)))\n                labels.push(date.toLocaleDateString())\n            }\n            else if(step.label === \"Week\"){\n                sum_array.push(f(elem))\n                if(date.getDay() === 0 || i === relevantData.length-1){\n                    data.push(roundTo2(sum_array.reduce(sum)/sum_array.length))\n                    sum_array = []\n                    if (date.getDay() === 0) labels.push(date.toDateString())\n                    else                    labels.push(\"last Week\")\n                }\n            }\n            else {\n                sum_array.push(f(elem))\n                if(date.getDate() === 1 || i === relevantData.length-1){\n                    data.push(roundTo2(sum_array.reduce(sum)/sum_array.length))\n                    sum_array = []\n                    if (date.getDate() === 1)    labels.push(monthNames[date.getMonth()])\n                    else                         labels.push(\"last Month\")\n                }\n            }\n        }\n        return [data,labels]\n    }\n\n    if (activeLegend === \"first vacc\"){\n        if(relative) return data_sorting( x => x[\"first vacc\"]/German_population*100)\n        else return data_sorting(x => x[\"first vacc\"])\n    }\n    else if (activeLegend === \"second vacc\"){\n        if(relative) return data_sorting( x => x[\"second vacc\"]/German_population*100)\n        else return data_sorting(x => x[\"second vacc\"])\n    }\n    else {\n        return [[],[]];\n    }\n}\n\n/* --------------------------------------------------------------------------------\n| The Component\n|-----------------------------------------------------------------------------------\n*/\nconst Charts_Vacc = (props) => {\n    // States\n    // tracks the stepsize selected in the options panel\n    const [step, setStep] = useState({ value: 'd', label: 'Day' });\n    const [startDate, setStartDate] = useState();\n    const [endDate, setEndDate] = useState();\n    const [relativeState, setRelativeState] = useState(false);\n    \n\n    /* --------------------------------------------------------------------------------\n    |  Chart Init\n    |-----------------------------------------------------------------------------------\n    | \n    */\n    useEffect(() => {\n        if(props.completeRegionData){\n            if(props.completeRegionData.length > 1){\n                // Set States\n                var now = new Date(props.lastUpdate)\n                var lastWeek = new Date(props.lastUpdate)\n                lastWeek.setDate(now.getDate() - 7)\n                setStartDate(lastWeek)\n                setEndDate(now)\n                // Set Chart\n                var ctx = document.getElementById(id.id).getContext(\"2d\");\n                chart = new Chart(ctx, config);\n                /*\n                for (var country of props.completeRegionData[0]){\n                    if (country === \"Germany\"){\n                        German_population = country[0].population\n                        break\n                    }\n                }\n                */\n            }\n        }\n    },[props.completeRegionData])\n\n\n    /* --------------------------------------------------------------------------------\n    |  Chart Update\n    |-----------------------------------------------------------------------------------\n    | \n    */\n    useEffect(() => {\n        if(props.completeRegionData){\n            if(props.completeRegionData.length > 1){\n                startDate = new Date(\"1/1/21\")\n                endDate = new Date(\"1/2/21\")\n                // Language Support\n                var labels_names = {\n                    dataset:{\n                        English:[\"First Vaccination\", \"Second Vaccination\"],\n                        Deutsch:[\"Erstimpfung\", \"Zweitimpfung\"]\n                    },\n                    title:{\n                        English:\"Vaccinations in Germany\",\n                        Deutsch:\"Impfungen in Deutschland\"\n                    }\n                }\n                //First Vacc\n                var VaccData = props.completeRegionData[1].vacc\n                var [data,labels] = getRelevantData(VaccData,\"first vacc\", startDate, endDate, step, new Date(props.lastUpdate),relativeState)\n                var color = \"rgb(75, 192, 192)\"\n                chart.data.datasets.push({\n                    label: labels_names.dataset[props.activeLanguage][0],\n                    data: data,\n                    //color\n                    backgroundColor: chart_color(color).alpha(0.2).rgbString(),\n                    borderColor: color,\n                    colorNumber:0,\n                    pointBackgroundColor: color,\n                    borderWidth: 1\n                })\n                //Second Vacc\n                var [data,labels] = getRelevantData(VaccData,\"second vacc\", startDate, endDate, step, new Date(props.lastUpdate),relativeState)\n                var color = \"rgb(75, 192, 150)\"\n                chart.data.datasets.push({\n                    label: labels_names.dataset[props.activeLanguage][1],\n                    data: data,\n                    //color\n                    backgroundColor: chart_color(color).alpha(0.2).rgbString(),\n                    borderColor: color,\n                    colorNumber:1,\n                    pointBackgroundColor: color,\n                    borderWidth: 1\n                })\n                // Chart Labels\n                chart.options.title.text = labels_names.title[props.activeLanguage]\n                chart.data.labels = labels\n                chart.update()\n            }\n        }\n    },[props.startDate, props.endDate, step, relativeState])\n\n    /* --------------------------------------------------------------------------------\n    | Loading Indicator\n    |-----------------------------------------------------------------------------------\n    | Show the loading Indicator until the data is loaded\n    */\n    if(props.completeRegionData){\n        if(props.completeRegionData.length > 1){\n            return (\n                <div className=\"chartContainer\">\n                    <div style={styles}>\n                        <canvas style={{width:'100%',height:'500px'}} id={id.id}/>\n                    </div>\n                    <div style={styles2}>\n                        <ChartMenu_Vacc\n                            setStep={setStep} \n                            startDate={startDate} \n                            endDate={endDate} \n                            setEndDate={setEndDate} \n                            setStartDate={setStartDate} \n                            lastUpdate={props.lastUpdate}\n                            alert={props.alert}\n                            relativeState={relativeState}\n                            setRelativeState={setRelativeState}\n                            />\n                    </div>    \n                </div>\n            );\n        }\n    } \n    return (\n        <div className=\"chartContainer\">\n            <LoadingMap />\n        </div>\n    )\n}\n//<canvas style={{width:'95%',height:'500px'}} id={id.id}/>\n\nexport default Charts_Vacc;\n","/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/InfoWindow.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/tasks/BuildLegend.js",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartMenu/ChartMenu_Vacc.jsx",["180","181"],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/tasks/formatNumberWithSpaces.js",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/Legend.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/NewstickerLanguage.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/Newsticker.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/UpdatePanel.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/DropdownMenuButton.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/MapFocusButton.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/Tooltipbox.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/Charts.jsx",["182","183","184","185","186","187","188"],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/Charts_Region.jsx",["189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartMenu/TimeRange.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartMenu/Stepsize.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/entities/LegendItem.js",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartMenu.jsx",["206"],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/tasks/LoadNewsTask.js",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/entities/DropdownMenu.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/entities/FocusMenu.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartMenu/AddCountry.jsx",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartMenu/AddRegion.jsx",["207"],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/entities/NewsItem.js",[],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/Vacc_T.jsx",["208","209","210","211","212","213","214","215","216"],"/home/tassia/Uni/iap/github/IAP_Corona-Dashboard/src/components/ChartMenu/Switches.jsx",["217","218"],{"ruleId":"219","severity":1,"message":"220","line":88,"column":29,"nodeType":"221","endLine":88,"endColumn":165},{"ruleId":"222","severity":1,"message":"223","line":18,"column":9,"nodeType":"224","messageId":"225","endLine":18,"endColumn":14},{"ruleId":"226","severity":1,"message":"227","line":37,"column":29,"nodeType":"228","messageId":"229","endLine":37,"endColumn":31},{"ruleId":"226","severity":1,"message":"227","line":37,"column":78,"nodeType":"228","messageId":"229","endLine":37,"endColumn":80},{"ruleId":"222","severity":1,"message":"230","line":3,"column":27,"nodeType":"224","messageId":"225","endLine":3,"endColumn":36},{"ruleId":"219","severity":1,"message":"231","line":42,"column":15,"nodeType":"221","endLine":48,"endColumn":90},{"ruleId":"219","severity":1,"message":"220","line":51,"column":15,"nodeType":"221","endLine":61,"endColumn":21},{"ruleId":"226","severity":1,"message":"227","line":30,"column":29,"nodeType":"228","messageId":"229","endLine":30,"endColumn":31},{"ruleId":"226","severity":1,"message":"227","line":30,"column":78,"nodeType":"228","messageId":"229","endLine":30,"endColumn":80},{"ruleId":"226","severity":1,"message":"227","line":30,"column":139,"nodeType":"228","messageId":"229","endLine":30,"endColumn":141},{"ruleId":"222","severity":1,"message":"232","line":3,"column":17,"nodeType":"224","messageId":"225","endLine":3,"endColumn":24},{"ruleId":"222","severity":1,"message":"233","line":126,"column":14,"nodeType":"224","messageId":"225","endLine":126,"endColumn":22},{"ruleId":"234","severity":1,"message":"235","line":222,"column":7,"nodeType":"236","endLine":222,"endColumn":33,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":233,"column":17,"nodeType":"224","messageId":"240","endLine":233,"endColumn":26},{"ruleId":"234","severity":1,"message":"241","line":233,"column":29,"nodeType":"242","endLine":233,"endColumn":47},{"ruleId":"238","severity":1,"message":"243","line":234,"column":17,"nodeType":"224","messageId":"240","endLine":234,"endColumn":24},{"ruleId":"234","severity":1,"message":"244","line":234,"column":27,"nodeType":"242","endLine":234,"endColumn":45},{"ruleId":"245","severity":1,"message":"246","line":261,"column":22,"nodeType":"224","messageId":"247","endLine":261,"endColumn":26},{"ruleId":"245","severity":1,"message":"248","line":261,"column":27,"nodeType":"224","messageId":"247","endLine":261,"endColumn":33},{"ruleId":"245","severity":1,"message":"249","line":262,"column":21,"nodeType":"224","messageId":"247","endLine":262,"endColumn":26},{"ruleId":"219","severity":1,"message":"250","line":294,"column":25,"nodeType":"221","endLine":304,"endColumn":31},{"ruleId":"222","severity":1,"message":"251","line":8,"column":10,"nodeType":"224","messageId":"225","endLine":8,"endColumn":16},{"ruleId":"222","severity":1,"message":"252","line":8,"column":17,"nodeType":"224","messageId":"225","endLine":8,"endColumn":22},{"ruleId":"222","severity":1,"message":"253","line":1,"column":18,"nodeType":"224","messageId":"225","endLine":1,"endColumn":26},{"ruleId":"222","severity":1,"message":"232","line":3,"column":17,"nodeType":"224","messageId":"225","endLine":3,"endColumn":24},{"ruleId":"222","severity":1,"message":"254","line":186,"column":13,"nodeType":"224","messageId":"225","endLine":186,"endColumn":22},{"ruleId":"222","severity":1,"message":"255","line":301,"column":13,"nodeType":"224","messageId":"225","endLine":301,"endColumn":23},{"ruleId":"234","severity":1,"message":"256","line":327,"column":7,"nodeType":"236","endLine":327,"endColumn":28,"suggestions":"257"},{"ruleId":"234","severity":1,"message":"258","line":380,"column":7,"nodeType":"236","endLine":380,"endColumn":46,"suggestions":"259"},{"ruleId":"234","severity":1,"message":"260","line":410,"column":7,"nodeType":"236","endLine":410,"endColumn":92,"suggestions":"261"},{"ruleId":"222","severity":1,"message":"253","line":1,"column":18,"nodeType":"224","messageId":"225","endLine":1,"endColumn":26},{"ruleId":"222","severity":1,"message":"232","line":3,"column":17,"nodeType":"224","messageId":"225","endLine":3,"endColumn":24},{"ruleId":"222","severity":1,"message":"262","line":112,"column":5,"nodeType":"224","messageId":"225","endLine":112,"endColumn":16},{"ruleId":"245","severity":1,"message":"263","line":171,"column":22,"nodeType":"224","messageId":"247","endLine":171,"endColumn":26},{"ruleId":"222","severity":1,"message":"254","line":201,"column":13,"nodeType":"224","messageId":"225","endLine":201,"endColumn":22},{"ruleId":"245","severity":1,"message":"263","line":210,"column":22,"nodeType":"224","messageId":"247","endLine":210,"endColumn":26},{"ruleId":"222","severity":1,"message":"255","line":341,"column":13,"nodeType":"224","messageId":"225","endLine":341,"endColumn":23},{"ruleId":"245","severity":1,"message":"264","line":364,"column":25,"nodeType":"224","messageId":"247","endLine":364,"endColumn":39},{"ruleId":"245","severity":1,"message":"265","line":365,"column":25,"nodeType":"224","messageId":"247","endLine":365,"endColumn":38},{"ruleId":"234","severity":1,"message":"256","line":385,"column":7,"nodeType":"236","endLine":385,"endColumn":27,"suggestions":"266"},{"ruleId":"245","severity":1,"message":"267","line":427,"column":25,"nodeType":"224","messageId":"247","endLine":427,"endColumn":28},{"ruleId":"234","severity":1,"message":"268","line":446,"column":7,"nodeType":"236","endLine":446,"endColumn":56,"suggestions":"269"},{"ruleId":"245","severity":1,"message":"267","line":468,"column":25,"nodeType":"224","messageId":"247","endLine":468,"endColumn":28},{"ruleId":"234","severity":1,"message":"270","line":481,"column":7,"nodeType":"236","endLine":481,"endColumn":92,"suggestions":"271"},{"ruleId":"245","severity":1,"message":"272","line":504,"column":25,"nodeType":"224","messageId":"247","endLine":504,"endColumn":28},{"ruleId":"245","severity":1,"message":"273","line":508,"column":30,"nodeType":"224","messageId":"247","endLine":508,"endColumn":35},{"ruleId":"234","severity":1,"message":"256","line":516,"column":7,"nodeType":"236","endLine":516,"endColumn":33,"suggestions":"274"},{"ruleId":"222","severity":1,"message":"275","line":7,"column":8,"nodeType":"224","messageId":"225","endLine":7,"endColumn":24},{"ruleId":"276","severity":1,"message":"277","line":41,"column":9,"nodeType":"278","messageId":"279","endLine":41,"endColumn":15},{"ruleId":"222","severity":1,"message":"253","line":1,"column":18,"nodeType":"224","messageId":"225","endLine":1,"endColumn":26},{"ruleId":"222","severity":1,"message":"232","line":3,"column":17,"nodeType":"224","messageId":"225","endLine":3,"endColumn":24},{"ruleId":"222","severity":1,"message":"280","line":4,"column":8,"nodeType":"224","messageId":"225","endLine":4,"endColumn":22},{"ruleId":"222","severity":1,"message":"281","line":97,"column":7,"nodeType":"224","messageId":"225","endLine":97,"endColumn":14},{"ruleId":"222","severity":1,"message":"233","line":127,"column":14,"nodeType":"224","messageId":"225","endLine":127,"endColumn":22},{"ruleId":"245","severity":1,"message":"246","line":255,"column":22,"nodeType":"224","messageId":"247","endLine":255,"endColumn":26},{"ruleId":"245","severity":1,"message":"248","line":255,"column":27,"nodeType":"224","messageId":"247","endLine":255,"endColumn":33},{"ruleId":"245","severity":1,"message":"249","line":256,"column":21,"nodeType":"224","messageId":"247","endLine":256,"endColumn":26},{"ruleId":"234","severity":1,"message":"282","line":274,"column":7,"nodeType":"236","endLine":274,"endColumn":93,"suggestions":"283"},{"ruleId":"222","severity":1,"message":"251","line":6,"column":10,"nodeType":"224","messageId":"225","endLine":6,"endColumn":16},{"ruleId":"222","severity":1,"message":"252","line":6,"column":17,"nodeType":"224","messageId":"225","endLine":6,"endColumn":22},"react/jsx-pascal-case","Imported JSX component Charts_Vacc must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'popup' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","Imported JSX component Charts_Region must be in PascalCase or SCREAMING_SNAKE_CASE","'plugins' is defined but never used.","'roundTo4' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.lastUpdate'. Either include it or remove the dependency array.","ArrayExpression",["284"],"no-const-assign","'startDate' is constant.","const","Assignments to the 'startDate' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","'endDate' is constant.","Assignments to the 'endDate' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-redeclare","'data' is already defined.","redeclared","'labels' is already defined.","'color' is already defined.","Imported JSX component ChartMenu_Vacc must be in PascalCase or SCREAMING_SNAKE_CASE","'purple' is defined but never used.","'white' is defined but never used.","'useState' is defined but never used.","'sum_array' is assigned a value but never used.","'init_Chart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["285"],"React Hook useEffect has missing dependencies: 'props.WorldData', 'props.activeLegend', 'props.endDate', 'props.lastUpdate', 'props.relativeState', 'props.startDate', and 'props.step'. Either include them or remove the dependency array.",["286"],"React Hook useEffect has missing dependencies: 'completeData', 'props.WorldData', and 'props.lastUpdate'. Either include them or remove the dependency array.",["287"],"'init_States' is assigned a value but never used.","'date' is already defined.","'Active_country' is already defined.","'Active_region' is already defined.",["288"],"'Ger' is already defined.","React Hook useEffect has missing dependencies: 'props.activeLegend', 'props.endDate', 'props.lastUpdate', 'props.relativeState', 'props.startDate', and 'props.step'. Either include them or remove the dependency array.",["289"],"React Hook useEffect has missing dependencies: 'props.completeRegionData' and 'props.lastUpdate'. Either include them or remove the dependency array.",["290"],"'obj' is already defined.","'Kreis' is already defined.",["291"],"'FormControlLabel' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'ChartMenu_Vacc' is defined but never used.","'styles2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.activeLanguage', 'props.completeRegionData', and 'props.lastUpdate'. Either include them or remove the dependency array.",["292"],{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [props.completeRegionData, props.lastUpdate]",{"range":"311","text":"312"},"Update the dependencies array to be: [props, props.activeCountry]",{"range":"313","text":"314"},"Update the dependencies array to be: [props.selectedCountries, completeData, props.activeLegend, props.startDate, props.endDate, props.step, props.lastUpdate, props.relativeState, props.WorldData]",{"range":"315","text":"316"},"Update the dependencies array to be: [props.startDate, props.endDate, props.step, props.activeLegend, props.relativeState, props.lastUpdate, props.WorldData, completeData]",{"range":"317","text":"318"},"Update the dependencies array to be: [props, props.activeRegion]",{"range":"319","text":"320"},"Update the dependencies array to be: [props.selectedRegions, props.completeRegionData, props.activeLegend, props.startDate, props.endDate, props.step, props.lastUpdate, props.relativeState]",{"range":"321","text":"322"},"Update the dependencies array to be: [props.startDate, props.endDate, props.step, props.activeLegend, props.relativeState, props.completeRegionData, props.lastUpdate]",{"range":"323","text":"324"},"Update the dependencies array to be: [props, props.completeRegionData]",{"range":"325","text":"326"},"Update the dependencies array to be: [props.startDate, props.endDate, props.step, props.relativeState, props.vacCumulative, props.completeRegionData, props.lastUpdate, props.activeLanguage]",{"range":"327","text":"328"},[7388,7414],"[props.completeRegionData, props.lastUpdate]",[11187,11208],"[props, props.activeCountry]",[13290,13329],"[props.selectedCountries, completeData, props.activeLegend, props.startDate, props.endDate, props.step, props.lastUpdate, props.relativeState, props.WorldData]",[14824,14909],"[props.startDate, props.endDate, props.step, props.activeLegend, props.relativeState, props.lastUpdate, props.WorldData, completeData]",[13894,13914],"[props, props.activeRegion]",[16675,16724],"[props.selectedRegions, props.completeRegionData, props.activeLegend, props.startDate, props.endDate, props.step, props.lastUpdate, props.relativeState]",[18324,18409],"[props.startDate, props.endDate, props.step, props.activeLegend, props.relativeState, props.completeRegionData, props.lastUpdate]",[19800,19826],"[props, props.completeRegionData]",[9541,9627],"[props.startDate, props.endDate, props.step, props.relativeState, props.vacCumulative, props.completeRegionData, props.lastUpdate, props.activeLanguage]"]
